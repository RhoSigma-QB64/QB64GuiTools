// ============================================================
// === This file was created with MakeCARR.bas by RhoSigma, ===
// === use it in conjunction with its respective .bm file.  ===
// ============================================================

// --- Array(s) representing the contents of file RhoSigma32px.png
// ---------------------------------------------------------------------
static const unsigned int32 RhoSigmaImgL0[] = {
    248,
    0x474E5089,0x0A1A0A0D,0x0D000000,0x52444849,0x20000000,0x20000000,0x00000308,0x8AA44400,
    0x030000C6,0x544C5000,0x00000045,0x0007098D,0x89B3D100,0x89878E15,0x2C8B9AC6,0x1F441293,
    0x8DD2EC1C,0xC747160C,0xDBE5C4C6,0x0D480FD9,0xE7381B0A,0xE4E4DCE3,0x0C0D26E4,0xF8E9EFF2,
    0x1E1EECF7,0x0706131E,0x558DD98B,0xB0904F02,0x9296A9CB,0xB0BB7C0E,0xF3F292A9,0x100C0DF5,
    0xA2030208,0xF5FBA6A1,0xB5B5B7F3,0xFEFCFAFA,0xA9B7FEFC,0x864060A8,0x58D10000,0x550C0C3C,
    0xFEFEFE8E,0xACAFADAC,0xA7ADA2A2,0x8C3839A8,0x02A9AAAC,0x1F288532,0x0E126D0C,0x05090906,
    0x034F0504,0x221C3832,0xE8F5F2EC,0xE5DBFDE8,0x262745EF,0x292D3154,0x2A332928,0xE6DBD425,
    0x0EEBE6F1,0xF0FB050A,0xEBECF0F1,0x54F2EEF0,0xEAE24F50,0x675B53F0,0x24D5D5D7,0x488F1806,
    0x0505D28F,0x38292F47,0x02043135,0x0F131802,0x4E1C0032,0x6770947C,0x04040C58,0xC3CACBD4,
    0x2028D3C8,0x1C1F3819,0x454E526D,0x060C2E2F,0x373E4806,0xF136416A,0x253AEBEE,0x0E4D9438,
    0x0F22233B,0xE8EDCC8C,0xEAEBEEE7,0x8DF0F0F2,0xEEEE5063,0x977B37EE,0x165457A8,0xAA00B694,
    0x070606AA,0x53141619,0x3F573A55,0x14143237,0x8B181839,0x0D146C6F,0x4F4FC910,0x4B9AA29C,
    0x54D32E30,0x080C0E04,0x920282F2,0x0A17A798,0x9596960A,0xCECECDCE,0x080DD0CE,0x1B2C3608,
    0x2C141524,0x2A3D1212,0x1C25392A,0x731391CC,0xD3F500AE,0x4995510A,0xABC78450,0x005D55D9,
    0xEA428FE9,0x8C739303,0x94D4E9D0,0xC4BBC94E,0x5254510A,0x8B92EAC1,0x52CFF073,0x135D3591,
    0xA200C66D,0x01F76EFF,0x0051CB59,0x7FDF23CD,0x91664B80,0x52C77354,0x73CCBC9B,0x8C97E863,
    0xF20757AF,0xE7F657A0,0x5D0C2D94,0xF2B9C3BB,0xCBB20282,0x754614D7,0xC53C413D,0x87AF1537,
    0x925A275D,0xB0F797CF,0xECFC0101,0x6CCCAD5F,0x61CA963B,0x92626A08,0x7C7E7DC4,0x6D35AC46,
    0xD439ECBB,0xC3BBB65B,0x8E92656B,0x63AF8A78,0xF56200F3,0x71ECB433,0x82766FD4,0xF2370090,
    0xD094A8C9,0x6BB64FAF,0xB3C7D10A,0x8B870000,0x73F63854,0x98B0EE58,0xF16BA9F5,0xF8B3368F,
    0x6C6B70E5,0xF0543434,0xFB833466,0x3169D1FE,0x27B1F6B5,0x72A8724D,0x2D33CB64,0x060B388D,
    0x4338AB62,0x272DB44A,0xF953B38B,0x3BB730D5,0x2D87223F,0xF0057215,0x6A3174CE,0x368ED3A6,
    0x002D2D64,0xF1F7FFA2,0xE79B38AD,0x4C7892AE,0x4A70433C,0x74345604,0x2F1DB839,0xDE72306D,
    0xB1D593F6,0x77AEA074,0x9D4F588A,0xD6A66FCB,0x87A46B4A,0xAFF6E8B4,0xA65A69F6,0x734854FB,
    0x86B0AA8F,0xB1814A38,0xAE768BC9,0xB5CA3150,0x376FB0AE,0x2CAA7386,0x280DBA86,0xB1A89650,
    0xEC72B3CD,0x3710B4CF,0x0A1DC068,0x00000068,0x46466F09,0x00000073,0x00000000,0x2ADA0000,
    0x0000CEB6,0x44498E00,0xDA785441,0x0DDB93AD,0x450820C0,0x4471774D,0xDD06E927,0xA59C45C4,
    0xEC0129A5,0xCAC4DABD,0x0213CF0F,0xBF1D6A92,0x9236F354,0xCF18612B,0x60E508DF,0xBC6810F2,
    0xDB43D6FC,0x9667C455,0x3CC137D8,0xCDE2E352,0x2CD6B411,0x6B411CD1,0x120D12CD,0x8486465C,
    0x21088198,0x06BC1203,0xC03310E6,0xCC21081C,0xE200F597,0xD0E7C090,0xD4935FC7,0x185DD00D,
    0x08D36C81,0xBF587FDD,0x9EAFE98B,0x0F6AC5DE,0x013FF393,0x3A63EEE6,0x9A40BDFC,0x00000000
};

static const unsigned int8 RhoSigmaImgB[] = {
    8,
    0x49,0x45,0x4E,0x44,0xAE,0x42,0x60,0x82
};

// --- Saved full qualified output path and filename, so we've no troubles
// --- when cleaning up, even if the current working folder was changed
// --- during program runtime.
// ---------------------------------------------------------------------
char RhoSigmaImgName[8192]; // it's a safe size for any current OS

// --- Cleanup function to delete the written file, called by the atexit()
// --- handler at program termination time, if requested by user.
// ---------------------------------------------------------------------
void KillRhoSigmaImgData(void)
{
    remove(RhoSigmaImgName);
}

// --- Function to write the array(s) back into a file, will return the
// --- full qualified output path and filename on success, otherwise an
// --- empty string is returned (access/write errors, file truncated).
// ---------------------------------------------------------------------
const char *WriteRhoSigmaImgData(const char *FileName, int16 AutoClean)
{
    FILE *han = NULL; // file handle
    int32 num = NULL; // written elements

    #ifdef QB64_WINDOWS
    if (!_fullpath(RhoSigmaImgName, FileName, 8192)) return "";
    #else
    if (!realpath(FileName, RhoSigmaImgName)) return "";
    #endif

    if (!(han = fopen(RhoSigmaImgName, "wb"))) return "";
    if (AutoClean) atexit(KillRhoSigmaImgData);

    num = fwrite(&RhoSigmaImgL0[1], 4, RhoSigmaImgL0[0], han);
    if (num != RhoSigmaImgL0[0]) {fclose(han); return "";}

    num = fwrite(&RhoSigmaImgB[1], 1, RhoSigmaImgB[0], han);
    if (num != RhoSigmaImgB[0]) {fclose(han); return "";}

    fclose(han);
    return RhoSigmaImgName;
}

