'============================================================
'=== This file was created with MakeDATA.bas by RhoSigma, ===
'=== you must $INCLUDE this at the end of your program.   ===
'============================================================

'----------------------------
'--- WriteError32ImgData$ ---
'----------------------------
' This function will write the DATAs you've created with MakeDATA.bas
' back to disk and so it rebuilds the original file.
'
' After the writeback call, only use the returned realFile$ to access the
' written file. It's your given path, but with an maybe altered filename
' (number added) in order to avoid the overwriting of an already existing
' file with the same name in the given location.
'----------
' SYNTAX:
'   realFile$ = WriteError32ImgData$ (wantFile$)
'----------
' INPUTS:
'   --- wantFile$ ---
'    The filename you would like to write the DATAs to, can contain
'    a full or relative path.
'----------
' RESULT:
'   --- realFile$ ---
'    - On success this is the path and filename finally used after all
'      applied checks, use only this returned filename to access the
'      written file.
'    - On failure this function will panic with the appropriate runtime
'      error code which you may trap and handle as needed with your own
'      ON ERROR GOTO... handler.
'---------------------------------------------------------------------
FUNCTION WriteError32ImgData$ (file$)
'--- option _explicit requirements ---
DIM po%, body$, ext$, num%, numL&, numB&, rawdata$, stroffs&, i&, dat&, ff%
'--- separate filename body & extension ---
FOR po% = LEN(file$) TO 1 STEP -1
    IF MID$(file$, po%, 1) = "." THEN
        body$ = LEFT$(file$, po% - 1)
        ext$ = MID$(file$, po%)
        EXIT FOR
    ELSEIF MID$(file$, po%, 1) = "\" OR MID$(file$, po%, 1) = "/" OR po% = 1 THEN
        body$ = file$
        ext$ = ""
        EXIT FOR
    END IF
NEXT po%
'--- avoid overwriting of existing files ---
num% = 1
WHILE _FILEEXISTS(file$)
    file$ = body$ + "(" + LTRIM$(STR$(num%)) + ")" + ext$
    num% = num% + 1
WEND
'--- write DATAs ---
RESTORE Error32Img
READ numL&, numB&
rawdata$ = SPACE$((numL& * 4) + numB&)
stroffs& = 1
FOR i& = 1 TO numL&
    READ dat&
    MID$(rawdata$, stroffs&, 4) = MKL$(dat&)
    stroffs& = stroffs& + 4
NEXT i&
IF numB& > 0 THEN
    FOR i& = 1 TO numB&
        READ dat&
        MID$(rawdata$, stroffs&, 1) = CHR$(dat&)
        stroffs& = stroffs& + 1
    NEXT i&
END IF
ff% = FREEFILE
OPEN file$ FOR OUTPUT AS ff%
PRINT #ff%, rawdata$;
CLOSE ff%
'--- set result ---
WriteError32ImgData$ = file$
EXIT FUNCTION

'--- DATAs representing the contents of file Error32px.png
'---------------------------------------------------------------------
Error32Img:
DATA 424,27
DATA &H474E5089,&H0A1A0A0D,&H0D000000,&H52444849,&H20000000,&H20000000,&H00000608,&H7A7A7300
DATA &H060000F4,&H41444982,&HC5DA7854,&H4D540B97,&HF7801469,&HE9BCF579,&HA5172A26,&H45451307
DATA &H260CC30C,&H5E3242AF,&H98B06463,&H58CB6F19,&HC643430B,&H1E32C630,&H32AEDC8B,&HD48ABC94
DATA &H3C925225,&H952DD77B,&HF4AAF754,&HB951E4D0,&HB9CF7BB7,&HE7399CE7,&H4658CD18,&HB5ECCA31
DATA &H5AFFBAEE,&HFDEFFFFF,&HBDEFFDED,&HF020FFFF,&H3EF20B3F,&H8D1A359B,&HA630C303,&HFF289122
DATA &H2CB00283,&H64E4E58B,&H9B9B9917,&H1A69A6F7,&HB53131E4,&HEF7F56AB,&HF3441040,&HB7D80107
DATA &H04C27767,&H8DB19F1F,&HD858152A,&H556543DB,&HD2A4C815,&HCEA2A71B,&H00E1D67C,&H7A073CC3
DATA &H981CDE6C,&H831B1099,&H50E7653A,&H30C59DC6,&H444A4822,&HC9C34747,&H738FF088,&H77A5EE0B
DATA &HC49D8018,&HCBFAD91A,&H0BF705AF,&HDC3AFA0A,&HA77DA148,&HEE58C38C,&HE464AE08,&H5FCEDB35
DATA &HDCF87C64,&HC4A4CAB9,&HD5E576CB,&H010ED88F,&H33E49BF0,&HDCFFB667,&H94996A88,&H14763D9E
DATA &H03B12866,&H5D412496,&H8D59025E,&H807EB63A,&H70F4721B,&H5337B7E8,&H1DDA43D3,&HDD1EF380
DATA &HC3C0FFB3,&HDD71F3CC,&H909FAA46,&H1B267C43,&H985E94B0,&H70CD7563,&HD741312B,&HC35AF573
DATA &HD4A2A3DF,&H736898F2,&HBB740A2E,&HF25F2C02,&H418F76DD,&H8F683F9E,&HF2CFD61C,&H5DB3849B
DATA &H7491006C,&H034F5607,&HA810F356,&H92B82A87,&H7C9B485B,&H3D0B1F3D,&H17183B24,&HDDACB09F
DATA &HBB6D1C00,&H920DEC9B,&H8585A4D6,&H1B15F275,&H46434E51,&H18B99410,&H297E66AC,&HBF8F3FCC
DATA &H057CBA08,&H28B22B14,&H888FDBD4,&HCE63CBCD,&HA5D93E9C,&HD3E1FCB4,&H13E006F7,&HE5B2F16F
DATA &HC64686D1,&HA791267E,&HA733E9E9,&H0599A862,&HB0222690,&HAC2FE39E,&H83938A69,&H8C03914E
DATA &HDE2E09A6,&H03EDA74C,&HA0D260B7,&HB7A9C903,&H95B5796F,&HB8026D90,&HFA75F6BB,&H028EFB69
DATA &HCF864C85,&HB103DDE8,&HB081E7EA,&HA9A40914,&H5BCCD819,&H8C69AC20,&H6E5D068D,&H5C7E30B6
DATA &H7456C153,&H70724477,&H87878E02,&HBBDFE679,&H019FF59F,&H0203EF78,&H94D5A4B7,&H79EE0C57
DATA &H9DF2993D,&H4E008D3E,&H90145031,&HB360C49D,&H800BE160,&H2BA0D3A8,&H822AE7CC,&H29321212
DATA &HD9F54157,&H92088DB2,&H49C994C9,&H45AD4E89,&HAF0055A1,&H598E9F51,&H65E57CBA,&H9D94B065
DATA &H663FB835,&H3041C3DA,&HC5168BCE,&H9562B241,&H38886E30,&H22A2BA0A,&H72C323E0,&H0CDD14F3
DATA &HE669CFE9,&HE861D0E9,&HFEA1C391,&H8F33D3B7,&H5F0033BF,&HEF773B76,&HA4A4532D,&H7E581AF4
DATA &HBC7A375F,&HE5FC218F,&H47486F07,&HBF5920D1,&HC080D391,&H207EE953,&HB8C14A55,&H216A4F30
DATA &H6742A2AB,&H61A578BD,&HA685DC58,&H6231B10B,&H3BCC0A2E,&H9FF3CC01,&H78EC7ABD,&H424FDDEF
DATA &HD1CCF464,&HC2C231C3,&HDF38C5AA,&H07AE487C,&H00DDAF58,&HFC31B198,&HA4001811,&H821014B2
DATA &H4519B178,&H92163001,&H4DE91FCA,&H87837D17,&H7DDE0A1E,&HCD692129,&HDE70035B,&HB2A5FB13
DATA &HA7913BDA,&H6A517B3B,&H08E863D2,&H6F295E03,&H806B519C,&HCD012B2C,&H22481503,&HD6D4C0A2
DATA &HDC439416,&H77F67E80,&H5ADC21C5,&H350454D4,&H3F4A12B6,&HA4B88FCE,&H4EA3E952,&H5654B09D
DATA &H15BE3756,&HEBF5C6C0,&H7B3D2442,&HC222422E,&H8E2633F5,&H189151C3,&H6846A6E8,&H0B9B73BE
DATA &H7CD71975,&HB3C7C0F4,&H3A1CA46B,&HA943BBBB,&H99602F73,&H5B8C23D7,&H5C75C259,&H14DDB7A4
DATA &H19657388,&HE31D151F,&HB38026DD,&HAEE5BDA3,&H332AFBBD,&H7C8D4342,&H3B188ABB,&HBC8C0F17
DATA &H1BEA0857,&HFC672D29,&H1C853A52,&H06832E83,&HBF607281,&H50249D37,&HA558FDEE,&H2F920B9D
DATA &H1F8F60B6,&H282D730B,&H397C2D2E,&HD02BBDC7,&HB2F80057,&H7D76B35B,&H1EAD5A92,&H4E41796D
DATA &H22F04DF9,&H016E3734,&H57FAAE59,&H0EBBC6E5,&HA00E5740,&H37B0F462,&H1322A002,&HD1B4B4C8
DATA &H60DDADD9,&H5E1E1C18,&H95EAED7C,&HCB2CFFBE,&HBBB80057,&HC07D7DDE,&HC105198F,&HEF7A7452
DATA &H5141A81E,&HC1FC6709,&H051B951B,&HC1CB056C,&HCA6AA183,&HF04D6804,&H1A411FFE,&H7E374E6E
DATA &H123B063E,&H6A46687A,&HD799CE66,&HBF7BC022,&HC2CEC76D,&HB9C28562,&H392A6677,&H40D0D4D2
DATA &HAADA5257,&H11EB3E62,&HA7460314,&H8E1D7D6D,&HA3A38941,&HA17FDCD6,&H6BE4F1D1,&HC7CEE2CF
DATA &H85197E76,&H93A98016,&HEEE2CE27,&HC15553FA,&H958A7A52,&HBECFA609,&H8A52AADB,&HF2ECEC37
DATA &HCBCA28E2,&HB750EAB8,&HC9C0DEBA,&H70E9AE0E,&H52C968BD,&H74B050FC,&HF252426B,&HDE0016A6
DATA &HD2417DFB,&HDCB934EA,&H81FAB3C6,&HD2BAADD6,&HAD92D188,&H266E7C2A,&H3CAC8F06,&HFF355C61
DATA &HBEDCD02B,&H33C96D09,&H837D5777,&HA13C48E7,&H1B3C8EAE,&H2B82CA79,&HB0008D4B,&HADE2E962
DATA &H1E193F23,&HA83D2B50,&HE19895F7,&H36A2DCDA,&HCCCC6995,&HFF2B2DC1,&H6E88009D,&H61669056
DATA &H9DF131A5,&H5E761266,&H8C6CEE7E,&H4F840BFC,&H2CECEC84,&H2713B5ED,&H7719AE88,&HAD5823B4
DATA &HBEB6BE91,&HD708654D,&H1B6B3182,&H793F4C61,&H36C7742C,&H50B970F7,&HD185DFD1,&H63440F39
DATA &HAB99AA6B,&H90DD0989,&H53B5B547,&H4C751AD4,&HA83C7C7A,&HEE7B1E4F,&HA456CFDD,&H5E11CD49
DATA &H2C2AED3A,&H13B3980B,&HD6B8B3E4,&HA322EE6A,&HB81494C8,&H33F79F9B,&HA1B9300F,&HE38E41B1
DATA &H94AB5438,&H6DF6E96C,&HC670C214,&HFB5DFADF,&H361DC296,&H67DB0803,&H254302C1,&H9E9190A0
DATA &H0585450E,&HB03909BF,&H7AB2F96A,&H4B07077B,&H60199991,&H7DB5CB0C,&HDAE5B844,&HD734023B
DATA &HD7D51FAE,&H1D5D5D43,&H68343634,&H2F42B7B9,&HEEAF4AC1,&H03AE2E36,&H9F7076DC,&HDFDA7D5A
DATA &HC0246BF2,&HBBCADA75,&H14758A79,&H94B76545,&HC167F721,&HAC753AFD,&HAFE116F1,&H8DFE26CE
DATA &HD0,&HC1,&HDE,&HB6,&H2D,&H7F,&H02,&H94,&H02,&H06,&H23,&HD8,&HAB,&H28,&HCD,&H00
DATA &H00,&H00,&H00,&H49,&H45,&H4E,&H44,&HAE,&H42,&H60,&H82
END FUNCTION

