// ============================================================
// === This file was created with MakeCARR.bas by RhoSigma, ===
// === use it in conjunction with its respective .bm file.  ===
// ============================================================

// --- Array(s) representing the contents of file Default32px.png
// ---------------------------------------------------------------------
static const unsigned int32 GuiAppIconL0[] = {
    584,
    0x474E5089,0x0A1A0A0D,0x0D000000,0x52444849,0x20000000,0x20000000,0x00000608,0x7A7A7300,
    0x000000F4,0x59487009,0x0B000073,0x0B000013,0x9A000113,0x0000189C,0x4449E808,0xC3585441,
    0x8C5B975D,0xC719555D,0x7DED6B7F,0x9CCE732E,0xCEDA76D3,0x2D2F7A50,0x0B17296D,0x4A88D1A1,
    0x3DC30540,0x0862FA0A,0x010C1F11,0x1224307C,0x4C4DE183,0x19BE244C,0x84D8C6A3,0xA8B94108,
    0x8C695131,0x22094211,0x650CB44D,0xD3B6997A,0x9DEE76D2,0x77F7B399,0xB9ED61F1,0x4E4E4EE8,
    0xED6BDEF6,0x7FFFF6EF,0xC9857FDF,0xFBE37C1F,0x044ADFA8,0xF2CE08C7,0x373FA595,0xA3808CC0,
    0x80083DF3,0x0441A829,0x2145C557,0x8666F5A6,0xC5304A97,0x663820DD,0x0A965E96,0xC4A2F1D1,
    0xBB7943B1,0xD992B766,0x1CC100AD,0xFEC9618F,0xB02E6787,0xA24FA6F7,0x9C978667,0xE840BED1,
    0xC0439209,0x1D1CEE08,0x1BFAE09F,0x3A3F33F6,0x33FF0FCC,0x0660AA05,0x677C00AE,0x3EE79B67,
    0x78C14E9C,0x1DA9F08A,0x3C955C35,0xEE055FEF,0x87E6FF3C,0x78462010,0xA055C0FC,0x04B8DFD0,
    0x5364D5DD,0x6454A5DD,0x6A1B4052,0x0A8380A2,0xC229D9DD,0xA9AD00C0,0x927CED0E,0x35FCBE07,
    0x67E760C8,0x8F73C2BF,0xB77F4FDD,0xC739AB45,0x157FF703,0x0BF2F3A2,0x27C7E6BF,0xA6B99E0A,
    0x56FD644D,0xBE95BF58,0x3E4F3ABE,0xBCCD12FF,0xE1DB8301,0xFB74ED8A,0x075ED0BB,0xA19EE943,
    0x1B7EB01D,0x0D836D0C,0xABCAE03B,0x562ED360,0x6AB0BA77,0xA0ED0C23,0xD1A3EF59,0x356F506A,
    0xDEA1D9A1,0x3DE6C268,0xFA4D9B34,0xB9EC7DBA,0xFE9E51E3,0xB6E95FC5,0x2F79B01A,0xB80EF539,
    0x3F1AC793,0xE4C3EEFF,0x6DE43AB5,0x0EEDEA00,0xE8D0DAD4,0x3422E32C,0xC1C30056,0x3F5F669D,
    0xAD683E84,0x9B1AC625,0x32F0FF3F,0xF426F28C,0xE72325AF,0xE45E9795,0x011EDB89,0x406C4277,
    0xBF827AFF,0x2037BBF9,0xFA150ADC,0x4791C02A,0x50EF53CA,0xCC0773DB,0xE73EA85E,0xF22D5220,
    0x14E0C204,0xBEA5DEA7,0x7F308BE7,0xF4BE9F9E,0x8081E20A,0x84408563,0x17BC1EC7,0x8BC9F8CC,
    0xAA1324AF,0x07EDF038,0x1C943AEF,0xE2420490,0xDFFC0A4A,0xB58A15E5,0x62FF425C,0x48E4B006,
    0x0BAD5F7A,0xB48948B6,0x7805916E,0xA4046702,0xBF8F943C,0x408C4BFE,0x8CF3C510,0x10E60A20,
    0xE038FA43,0x2D31FCBA,0x44073016,0xA609CCF1,0x07504388,0xED2C5417,0x52B182AB,0xC1182997,
    0xED32F1DC,0xE07C94C1,0xF4619BBA,0xA7C69728,0xDF58E278,0x86421008,0x4B6CB247,0xB9D6E773,
    0x635512A9,0x6624F26C,0xA032798E,0x36750C66,0x0196F5B1,0xF9D8C0B0,0x7118C4B3,0xA390B277,
    0x5DBB742E,0x69474746,0x4A183BB5,0x626356A3,0xDF838272,0xBD6F003C,0x23D3E5C1,0x413915E4,
    0x4346BE9D,0xBD4E5AB3,0x32C87B96,0x4B5CDD5B,0x7F760BDD,0x3ED80361,0xC4194F14,0x49EAF239,
    0x81C18D4C,0x7A610441,0x99998A76,0x0D1DDC19,0x66B0888A,0xCEC61ACD,0xE728A79D,0x4275E7A9,
    0x7AF42C0C,0x186E0A20,0x54BA2390,0x65AB66B7,0x77A6AD7D,0x1ACD1D5A,0x438C1C59,0xE31E85CC,
    0x63639587,0xD1D48147,0x3BA2734A,0xE36F571B,0xA0578D8A,0x62B86CA6,0x988AAA03,0x1BA926E3,
    0xB43833BA,0x44413701,0x6C7AF5E8,0x1965B2D9,0x0655661B,0xCD1BB822,0x76DD6E7A,0xB6DD5B47,
    0xB8ADEAB6,0xD4CB5F2E,0xDB358F7C,0xE8FEDC5B,0xABF9BC8D,0x7D7C0E61,0x3B7FC317,0x09E1F9C3,
    0x81818DCC,0xE994D401,0x42CA69A9,0xFBC64F70,0x8D4E1D3B,0x55DB671C,0xFCF8F83B,0x68214518,
    0x01451469,0x238458DE,0x11F90971,0xEAC346F2,0x5BB59A8D,0xDB776D6D,0xD0E8D7DA,0xE9B9B76E,
    0x3E1C3DAE,0xCCD8C238,0x783FDE29,0xDEEF9B96,0xF465964B,0xBB745BD5,0x2EDDBA5D,0x98D3D3D3,
    0x2F17132B,0x9C697E31,0xC46989E9,0xC3A74E8C,0xE314C4F8,0x8F8C1313,0xDF37338F,0x2D721FFB,
    0xC8C4C065,0x59E7996A,0xA6F59BC3,0xEA0D1A35,0x199EA756,0x9171FE27,0x0CFA9EFB,0x1980B7E6,
    0x71E3FAFF,0x659F4D2E,0x69ABBAF3,0x29881A34,0x91D6076B,0xEF7633D7,0x105406BD,0x23775C53,
    0x53FA7C2E,0xC16A50B7,0x932CECEC,0xA9C03353,0xCAF56B44,0xD8965281,0x8599E59E,0x5E89C918,
    0x91E09CF7,0xF2CC1F8B,0xE6DEF7A7,0xA847E4C4,0xB432A82A,0x20682B7A,0x5A94D2CB,0xB31566B3,
    0xBA5C0BF3,0x5EBD31F8,0xCB23330F,0x5BADD632,0x0D1F07C7,0x5835AB53,0x7672E9DD,0x527434F4,
    0x4E422DFD,0xAD772B45,0x04CC129C,0x1782C609,0xDDAC2978,0x7773E5DD,0xD7BDE3EE,0x4BFEB907,
    0xB5F778DB,0xFF7E9C63,0x6A822E22,0xB1E1F7DA,0xF7CC2C63,0x0CD41750,0x6A5351CC,0x89C98D59,
    0x3D0B7A09,0x33D70616,0xEA039BDF,0x08B27709,0x1B146AC2,0x5261898A,0x0A31524D,0x73BDAE53,
    0x7ABCEF2B,0xEF77FD94,0x8F979DE2,0xDDDEFFB2,0x413E1F0C,0x5551D433,0x3FEB8DCC,0x25551FB1,
    0x956AA198,0xB29B8E23,0x7A7EFF7F,0x73731EBD,0x36632973,0xA43B8CBA,0x10220812,0xBD28CD40,
    0xA981A4C0,0xFFBC6A61,0xDE3708DA,0x70DF8C95,0x7ADE6EDF,0x93A308F9,0xB5596C23,0x02D94133,
    0xC9131353,0xC6E72AA8,0xF371B1CE,0x2726A626,0xA79B9F99,0xE470EDD3,0xED3A11C8,0xD016852E,
    0x800BD4F1,0x25E8151C,0xBA82080C,0x4AE23880,0x25294AA9,0xC0BFDEA7,0xC639DFBF,0x0C13A999,
    0x6724F3FF,0xD8324F26,0x152912BA,0xE534A733,0x4C93E9E4,0xA6A14E4F,0x54433164,0x4E34BF18,
    0xDE4BBFA7,0x7F3A994C,0xB3B31CE1,0x4D75B0B3,0xAA85BB2A,0xE9982A04,0x3CC180A2,0xD015D481,
    0xAB3DC6C0,0xFD9EEEB8,0x30704E28,0x77BF179C,0xBB8CAF08,0xDEAF7B09,0x8E20329B,0x5DB79B56,
    0x451703B5,0xF9BA6E0D,0x2E676666,0x053B3D33,0xE6A6A68C,0x34818CBE,0x01A09589,0x514CC535,
    0xEB854417,0x0BCED9EE,0x8785FCCF,0x1F8DBD9E,0x0C33FE3D,0xDCD94D43,0x866093BF,0x393132A8,
    0x1CC2C2CD,0x619A866E,0x8A105825,0x59D540A2,0xA026E9DD,0xD15FA957,0xAB497C07,0xA0AA81B9,
    0x18AB0C96,0xBFDBCAAA,0x9E8780FD,0xE5371DBD,0xC11FE7C9,0xD3CDF9DD,0x94A2606F,0x8F8F08A4,
    0x6E7E631C,0xC141C31E,0x4D2C40BC,0xBDA13336,0xB6C5776B,0x5589F1AA,0x4805140E,0x41A0AB89,
    0x10AC5710,0x3898A9B4,0x77A9C222,0xADF4702F,0x3E5D8CE3,0xEA096889,0x6A6C2E94,0xC34B44ED,
    0xFD77D84D,0x125AB875,0xB1A8EE1B,0x8ECE1334,0xE7A8D18D,0x28AB9E5C,0x8660165A,0x0A1A7903,
    0x34F03D5A,0xDDDC3050,0x4CD13554,0xD4DB6493,0xE1B981D8,0xA22814AA,0x59A49B82,0x5E4556E6,
    0x34B313E9,0xF5C18098,0x704529EB,0xD89F4AD7,0x34C61A0A,0x34C14C99,0x4745C7B5,0x8D2D14D4,
    0x3D5D7150,0x22A82495,0x0156A608,0x6D51AB57,0x21A60A98,0x311CC9E1,0xFAB54649,0xE8F74855,
    0x4B1C8128,0x389099B3,0xB836242F,0x8FB71FE1,0x636BF61E,0x797B28AD,0x88991451,0xEE0D3544,
    0x9AEA6B8E,0x71C3FFBF,0xA25992BC,0x3B9B5C69,0x024285C1,0x4480A698,0x216F42C3,0x64CCCCCC,
    0xD7707ADF,0x84EC5876,0x29D560EE,0x15683826,0xF539ABAB,0x8CC550CC,0x82CB3218,0x04318F46,
    0x4C733473,0x608B3103,0x02C87501,0x672AA510,0x62108C4E,0x00F77005,0x6CCB2CC4,0xCA84EA89,
    0x74AC7501,0x4B285E84,0xA52A5A0B,0x51662194,0x689C4A5D,0x0863D1A0,0x02704341,0x2C3244A0,
    0x27005568,0x27159C69,0x80820CBB,0x85998086,0x210C4210,0x21E3B864,0x85302C54,0xBD0E78E0,
    0x62F9849E,0x1BE6342E,0x3454DC11,0xD12A2A00,0x50CD4DC5,0xB8666897,0xA2DADA25,0xB7E84979,
    0x96A648EA,0x949EEE08,0x4D06AAB3,0x2698090C,0x2CE40B61,0x39CAC65C,0x838F5E8A,0xB7D81C8F,
    0xD7D384A8,0xAB507C2B,0xB5E0EDE0,0x49503CF4,0xE4965D6B,0xDCD2CB26,0x17119D3D,0x54501AAF,
    0x965052F7,0x5239D009,0xDAECAAA0,0xFEFE0BBB,0x16BD65E7,0x6CD3A456,0xB620CCF9,0x615F2344,
    0x15A456C0,0xD9627848,0x2CC33707,0x8225AD2C,0xF65392B8,0x53A5150E,0x2D491E9C,0xBEAE02D4,
    0x225295A8,0x44E696CC,0xD0A2B8DA,0xF74AF0C1,0x72581A2F,0x85E7562A,0xF1CB818A,0x70A38618
};

static const unsigned int8 GuiAppIconB[] = {
    22,
    0xE8,0xBF,0x71,0xD0,0x64,0x19,0x12,0xBF,0x51,0xF8,0x00,0x00,0x00,0x00,0x49,0x45,
    0x4E,0x44,0xAE,0x42,0x60,0x82
};

// --- Saved full qualified output path and filename, so we've no troubles
// --- when cleaning up, even if the current working folder was changed
// --- during program runtime.
// ---------------------------------------------------------------------
char GuiAppIconName[8192]; // it's a safe size for any current OS

// --- Cleanup function to delete the written file, called by the atexit()
// --- handler at program termination time, if requested by user.
// ---------------------------------------------------------------------
void KillGuiAppIconData(void)
{
    remove(GuiAppIconName);
}

// --- Function to write the array(s) back into a file, will return the
// --- full qualified output path and filename on success, otherwise an
// --- empty string is returned (access/write errors, file truncated).
// ---------------------------------------------------------------------
const char *WriteGuiAppIconData(const char *FileName, int16 AutoClean)
{
    FILE *han = NULL; // file handle
    int32 num = NULL; // written elements

    #ifdef QB64_WINDOWS
    if (!_fullpath(GuiAppIconName, FileName, 8192)) return "";
    #else
    if (!realpath(FileName, GuiAppIconName)) return "";
    #endif

    if (!(han = fopen(GuiAppIconName, "wb"))) return "";
    if (AutoClean) atexit(KillGuiAppIconData);

    num = fwrite(&GuiAppIconL0[1], 4, GuiAppIconL0[0], han);
    if (num != GuiAppIconL0[0]) {fclose(han); return "";}

    num = fwrite(&GuiAppIconB[1], 1, GuiAppIconB[0], han);
    if (num != GuiAppIconB[0]) {fclose(han); return "";}

    fclose(han);
    return GuiAppIconName;
}

