// ============================================================
// === This file was created with MakeCARR.bas by RhoSigma, ===
// === use it in conjunction with its respective .bm file.  ===
// ============================================================

// --- Array(s) representing the contents of file NiceGray.jpg
// ---------------------------------------------------------------------
static const unsigned int32 NiceGrayImgL0[] = {
    552,
    0xE0FFD8FF,0x464A1000,0x01004649,0x01000001,0x00000100,0x4300DBFF,0x01010200,0x02010101,
    0x02010101,0x02020202,0x02020304,0x04050202,0x06040304,0x06060605,0x06060605,0x06080907,
    0x06070907,0x080B0806,0x0A0A0A09,0x08060A0A,0x0A0B0C0B,0x0A0A090C,0x00DBFF0A,0x02020143,
    0x02020202,0x05030305,0x0706070A,0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,
    0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,0x0A0A0A0A,0xC0FF0A0A,
    0x00081100,0x03800080,0x02002201,0x11030111,0x00C4FF01,0x03000019,0x00010101,0x00000000,
    0x00000000,0x02010000,0x07000403,0x4800C4FF,0x02010010,0x09080402,0x03080708,0x00000001,
    0x03000200,0x14110401,0x1312D293,0x54533121,0x1505E292,0x91828152,0x23A3A294,0x51443332,
    0x22837155,0x63626141,0x4234F0E3,0x73726443,0xB245A184,0xC4FFF2D1,0x01011600,0x00000101,
    0x00000000,0x00000000,0x00000000,0xC4FF0501,0x01111700,0x00010101,0x00000000,0x00000000,
    0x00000000,0xFF012111,0x030C00DA,0x11020001,0x3F001103,0x9411F100,0x73E53899,0x88B8C1AD,
    0x019ED348,0x03B5B8DC,0x254CD1CF,0xD12C1FCE,0x688C1C17,0xD66047AB,0x78987163,0x30CCB239,
    0xC3A90BD8,0x5C861883,0x7FC41740,0xB7096825,0xFF1B3902,0x6E8D6600,0x2FEB213A,0xC5274AFD,
    0x267986CD,0x941F18BE,0x41AD218E,0x55C91F9B,0x7F84B309,0xD1F4E373,0xFEDB47AF,0x55CF28CD,
    0xCFAE5D0D,0x2F1397BA,0xD50D0BC8,0x3D9CE87A,0x9AAE9F2B,0x2EEB684C,0x17A86FF5,0x1BD85F06,
    0x5E0A891B,0x78E7E14C,0x00FFD46A,0xF2CEFE30,0xF36B595C,0x89EA1B1B,0x503964D4,0x935249B0,
    0x55C0C6D2,0xC5FB4FF1,0xAB4280FD,0x823CAE35,0x9ED25115,0x16C42EC8,0xB4227BB0,0xAFEB2F03,
    0x00FFC317,0xD8615B84,0x7419C664,0xC4641037,0x6645EB4C,0x9DFE14BB,0x89DBE2CE,0x1D59EF7B,
    0x9039B1C4,0x278F06C9,0x441377DA,0xCBD49E70,0x082EEE60,0xCFE459B2,0x71C4BD99,0xCFBC3A73,
    0x29E93B69,0xED98577F,0xE2037D45,0xEB32B524,0x7271890B,0x8575993A,0xD55E30C4,0x5DDEB75F,
    0x3E507B89,0x0880BED1,0x482DC34B,0x818A1BFC,0x59427316,0x8E82E9D1,0xA1C0972B,0xD020FACC,
    0x81431442,0x0579E799,0x29472CC2,0xAED8F632,0xB01C1817,0x0328DAC7,0x4314422C,0xD39CC382,
    0xD44BA454,0xB1816C63,0xFB57DAF2,0xB3AE5044,0x10DABBAC,0x0F910F0E,0xC9F93157,0x105A4A82,
    0x6EBB6DF2,0x07C62798,0x6FB47BA7,0x94FB8CA7,0x7F84D352,0x07871307,0x72114DB7,0x6A7A7E60,
    0x8E697A8B,0x5A2798D0,0xA21DF69C,0x1B9DA915,0xA16AF59D,0x71B65E69,0x471A5635,0x67308DED,
    0xCD3C5D07,0xE168663B,0xCC7AA13B,0x0760ABEE,0xBE63EBB5,0x337C8AA7,0x387F3035,0x6E04A6EF,
    0x26CD316E,0xFACE361D,0x10B5B735,0x8A4BDFD8,0xAD3E29FC,0xCB1F31C4,0x20EE594B,0x3D749B70,
    0xDFD02348,0x47EE134C,0x2FF79034,0xD0B3782C,0xECE28E8D,0x1D1BC30F,0x7D6583C4,0xD53D5ECD,
    0x185A68DC,0x0DC60275,0x56F80CB3,0x2DC28A1B,0xB6A0698C,0xCA675810,0x6CC92019,0x14A83502,
    0x9F0E8C69,0xB6C159E8,0x9F86C9E8,0x7D3F04E8,0xDE122B05,0xBA622CC7,0x4F9E4B0F,0x2E9560A7,
    0xB0A73D1C,0x690CADA0,0xA9B8243C,0x542C5C6E,0x089B63BE,0xD31CB9E0,0x8ACA3C64,0x63FBCBE1,
    0x9F398662,0x58EAECC4,0x8EF03E13,0x75267ACA,0x41DCB4B1,0x27F986D5,0x1A6E8562,0xD17782B7,
    0x6A5877C1,0x832EEED0,0x2E00FF4E,0x1037175F,0xA4EE145B,0xAA8BBB76,0xD4CEE8AE,0x3F982C2E,
    0xFC69CF84,0x1C87C3E5,0xFC6ACFC0,0x294683E4,0x2EACB7EF,0xC7CEAA25,0x5C209EF8,0x7EB88053,
    0x5F7BB68D,0xE7062EE7,0x24631AE1,0xBE977FC9,0x6F46ADA8,0x1502E249,0xDB30FD39,0xE5842D02,
    0xE719D514,0x3B17479A,0x40DD6AA0,0x0C08DF20,0xCCA18B28,0xF527EAFA,0x0C4CB490,0x5A4C51CE,
    0x47E94087,0x3EC93F13,0x393C41B0,0x2697C6C8,0x00FF34C6,0x89F5F45D,0x1D4E0FAC,0x66107D47,
    0xF53C337C,0x3F81A398,0x04D89AA7,0xA739AC12,0x747D8D87,0x3834A25D,0xD5D75640,0x26D69E69,
    0x671AC16C,0xC7C9AABE,0x048160FB,0xEF9A5960,0x2F63109A,0x0DF36598,0xC7BE3335,0xD2D2B7FA,
    0x9B96AB7A,0xD14B08C8,0xD1F6549E,0x1EABB9AB,0xEA009ED2,0xAEEF5AAE,0xE34347C5,0x190672FE,
    0x0F7FE859,0x1998BEB9,0x9088A298,0x1CA8EF59,0x2D537DC1,0x644C0A5A,0xB6DC7AC1,0x6E580DDA,
    0x74FDD9F2,0x103AACD0,0x3E84D9F3,0xF2647D07,0xD9B6ECFA,0xECB484A6,0x68B54D73,0x05C62B68,
    0xD3F567CA,0x81291C46,0x0F638692,0x49889AEE,0x19D6C34E,0x124C732E,0x71E4B433,0x7929FB92,
    0x3E8E075C,0x3C1A5AE8,0xFB19386E,0x785E8DE6,0x60C7E232,0x1887A5EF,0x84CB7284,0x06A6067A,
    0xFA2810E3,0x2134EA53,0x9D39DD36,0xD835CB8F,0x87A0237C,0xBC313467,0xB2184D21,0x9006831F,
    0x127F6035,0xF0E3D2C4,0x3BDBE4E3,0xE15E4403,0xFC89D00C,0xBD88E62A,0xC12E4D31,0x1668CEDE,
    0xA670B80E,0xAF907DAE,0x2C9E11A3,0x1D3B96B0,0xFDE9E0F4,0x0C4770EE,0x8A2768F9,0x83073DE1,
    0x3C3188BE,0x7C2CCB71,0xC3A76FCC,0x80155A3E,0xC00602D2,0x901D9067,0x08614017,0x103C3779,
    0x83BB7859,0x2D3C264B,0x2D5EFAC2,0xD046D691,0xCDA16D10,0x1117802F,0x3B43A76D,0xB2B8B1A7,
    0x0CCA0607,0xCC17267D,0x6039D504,0x3F8D6DF4,0x822F98D6,0xEEFD97FE,0x72CDC5AE,0xA2B8403C,
    0xE4E11601,0xD0740898,0xC3EA4CC6,0x294E83B6,0x026D4CCE,0x797715E2,0x8A1BB451,0x5EF59755,
    0xC4DCA0F9,0x3BBC7AE0,0x77562FE8,0x880BDBEC,0x1ECA21D5,0x9E20C5E5,0x7BCCA39B,0x194D03A1,
    0xC5E7E3F7,0x154DA3EE,0x83E62819,0x9CB8DCC3,0xD7996124,0x2C2E6C87,0xCA3161DC,0xC6A3EF99,
    0xEF9EF20E,0x1609D1A0,0x431E85DA,0xA84E71B9,0x309BB1DF,0x8819A3B8,0x9470A49F,0x6458D989,
    0xE6CC8783,0xAB6B70FA,0xC06AC931,0xCBAB242E,0xB099F007,0x28238E05,0x7E84DC79,0xAFEAFA66,
    0x773EC606,0x50D01788,0xF13F725E,0xF505D8CC,0xD63DCC4A,0x5779013B,0xF0EE3513,0x73895DB7,
    0x42B56F52,0xA20B09E2,0x29830B79,0x757D21F9,0x16AAFB2C,0xB7C1E93B,0xD9D81F21,0x425C9EE7,
    0xE0948711,0x81DC6EF9,0xAFFBED2A,0x554BDFC0,0x0DBCBB87,0x3A32D8F5,0x5C6BBF9C,0x9D6FF0D8,
    0xA96D3609,0x7AB30A54,0xFA2E3BBC,0xC368B04A,0xA6FAC2B3,0x8A3E4A2E,0x4E629E5D,0x0533CC20,
    0x9510510A,0xD8C4EB6F,0x3394A36F,0x54913D13,0x7D3EA25B,0x965B041D,0xBC8D3C9C,0x5633085B,
    0x1F5A1D1A,0xAF0927E2,0xFEE55263,0x8557BD0A,0x45B3E335,0x08155EB9,0xF26586D3,0xFEAD6710,
    0x4660BF04,0xAE89EEB8,0x130BB5C2,0xF968E4F4,0x7F222E81,0xA3A43E57,0x51ED7535,0x1CB8C8AE,
    0xCCA21E76,0x5A5F407E,0x3E665A42,0x2EF59974,0x5EEACCAB,0x8E715022,0x0DD92172,0x43B43036,
    0x180F6B60,0xEB71EAC8,0x2369BC04,0x20711FA9,0x907B8FDF,0x8F5D3016,0x103BD873,0xC13F6158,
    0x5CAA92C7,0x179117F8,0x0737CFE4,0xBC0649F8,0x71E7FE37,0xDA633676,0x4E9CD51D,0x4D71B25C,
    0xB681CB1C,0x04B01F0A,0x560B9239,0x00FFE41F,0x636E35D1,0x8D5AF74A,0x3A40AD59,0xF7DCD492,
    0x82AE7F7B,0xD21E560B,0x738FA73A,0x550A7B94,0xDFDA3D67,0xEAA1EA5A,0x24E8FAA1,0x497F580F,
    0xD46A1AE1,0x3BC393CE,0xC09650CA,0x7A665986,0x616213F7,0xF081B4AA,0x668174E6,0x930BD377,
    0x8905561F,0xE21650DF,0x5ECFAA3E,0x0F2C70E2,0x173B6653,0x721D5410,0xC46EDB39,0xF336AAEF
};

static const unsigned int8 NiceGrayImgB[] = {
    21,
    0xF0,0x85,0x38,0xAF,0x00,0xD6,0x6A,0xD8,0x6A,0x63,0xD4,0x08,0x57,0x99,0xD5,0x43,
    0xB8,0x90,0x7F,0xFF,0xD9
};

// --- Saved full qualified output path and filename, so we've no troubles
// --- when cleaning up, even if the current working folder was changed
// --- during program runtime.
// ---------------------------------------------------------------------
char NiceGrayImgName[8192]; // it's a safe size for any current OS

// --- Cleanup function to delete the written file, called by the atexit()
// --- handler at program termination time, if requested by user.
// ---------------------------------------------------------------------
void KillNiceGrayImgData(void)
{
    remove(NiceGrayImgName);
}

// --- Function to write the array(s) back into a file, will return the
// --- full qualified output path and filename on success, otherwise an
// --- empty string is returned (access/write errors, file truncated).
// ---------------------------------------------------------------------
const char *WriteNiceGrayImgData(const char *FileName, int16 AutoClean)
{
    FILE *han = NULL; // file handle
    int32 num = NULL; // written elements

    #ifdef QB64_WINDOWS
    if (!_fullpath(NiceGrayImgName, FileName, 8192)) return "";
    #else
    if (!realpath(FileName, NiceGrayImgName)) return "";
    #endif

    if (!(han = fopen(NiceGrayImgName, "wb"))) return "";
    if (AutoClean) atexit(KillNiceGrayImgData);

    num = fwrite(&NiceGrayImgL0[1], 4, NiceGrayImgL0[0], han);
    if (num != NiceGrayImgL0[0]) {fclose(han); return "";}

    num = fwrite(&NiceGrayImgB[1], 1, NiceGrayImgB[0], han);
    if (num != NiceGrayImgB[0]) {fclose(han); return "";}

    fclose(han);
    return NiceGrayImgName;
}

