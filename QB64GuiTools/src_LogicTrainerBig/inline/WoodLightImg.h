// ============================================================
// === This file was created with MakeCARR.bas by RhoSigma, ===
// === use it in conjunction with its respective .bm file.  ===
// ============================================================

// --- Array(s) representing the contents of file WoodLight.jpg
// ---------------------------------------------------------------------
static const unsigned int32 WoodLightImgL0[] = {
    808,
    0xE0FFD8FF,0x464A1000,0x01004649,0x01000001,0x00000100,0x4300DBFF,0x02020300,0x03020203,
    0x04030303,0x05040303,0x04050508,0x070A0504,0x0C080607,0x0B0C0C0A,0x0D0B0B0A,0x0D10120E,
    0x0B0E110E,0x1016100B,0x15141311,0x0F0C1515,0x14161817,0x15141218,0x00DBFF14,0x04030143,
    0x05040504,0x09050509,0x0D0B0D14,0x14141414,0x14141414,0x14141414,0x14141414,0x14141414,
    0x14141414,0x14141414,0x14141414,0x14141414,0x14141414,0x14141414,0x14141414,0xC0FF1414,
    0x00081100,0x03600060,0x02002201,0x11030111,0x00C4FF01,0x0100001F,0x01010105,0x00010101,
    0x00000000,0x01000000,0x05040302,0x09080706,0xC4FF0B0A,0x0010B500,0x03030102,0x05030402,
    0x00040405,0x017D0100,0x04000302,0x21120511,0x13064131,0x22076151,0x81321471,0x2308A191,
    0x15C1B142,0x24F0D152,0x82726233,0x17160A09,0x251A1918,0x29282726,0x3635342A,0x3A393837,
    0x46454443,0x4A494847,0x56555453,0x5A595857,0x66656463,0x6A696867,0x76757473,0x7A797877,
    0x86858483,0x8A898887,0x95949392,0x99989796,0xA4A3A29A,0xA8A7A6A5,0xB3B2AAA9,0xB7B6B5B4,
    0xC2BAB9B8,0xC6C5C4C3,0xCAC9C8C7,0xD5D4D3D2,0xD9D8D7D6,0xE3E2E1DA,0xE7E6E5E4,0xF1EAE9E8,
    0xF5F4F3F2,0xF9F8F7F6,0x00C4FFFA,0x0300011F,0x01010101,0x01010101,0x00000001,0x01000000,
    0x05040302,0x09080706,0xC4FF0B0A,0x0011B500,0x04020102,0x07040304,0x00040405,0x00770201,
    0x11030201,0x31210504,0x51411206,0x13716107,0x08813222,0xA1914214,0x2309C1B1,0x15F05233,
    0x0AD17262,0xE1342416,0x1817F125,0x27261A19,0x352A2928,0x39383736,0x4544433A,0x49484746,
    0x5554534A,0x59585756,0x6564635A,0x69686766,0x7574736A,0x79787776,0x8483827A,0x88878685,
    0x93928A89,0x97969594,0xA29A9998,0xA6A5A4A3,0xAAA9A8A7,0xB5B4B3B2,0xB9B8B7B6,0xC4C3C2BA,
    0xC8C7C6C5,0xD3D2CAC9,0xD7D6D5D4,0xE2DAD9D8,0xE6E5E4E3,0xEAE9E8E7,0xF5F4F3F2,0xF9F8F7F6,
    0x00DAFFFA,0x0001030C,0x11031102,0xF5003F00,0x4F6F8DFB,0x00FF222B,0x62DE4868,0x8D64BEFC,
    0xDDDC3FB1,0xD7767325,0xBC5C32D6,0x21D2784F,0xFF00FFFE,0xA4BE1700,0x4B00FF9A,0x19824664,
    0x6F6F371D,0x00FFCF32,0x5583A4B3,0xDFEE77D3,0x3EBB7CE5,0xF84F157B,0xF9F57C1A,0x8F3D4D9B,
    0x82968DAE,0x914CFA3C,0x27EE92EE,0x1EE96D77,0x00FFD9D6,0xAB3ED1A1,0xAC236365,0x7E166B0F,
    0x729C3DF2,0x6300FF6C,0xAA0BD4EF,0xBECD90E9,0x8F44E2EA,0x0CD9C47E,0x0300FF69,0xE2ADF4FB,
    0xA45D303D,0x08B7D776,0xB7EFEEE3,0xFDF13F8D,0x625FD494,0x86A488AE,0xF6D5E6C6,0xDFFDBE25,
    0x3A0A9727,0xBE00FF6C,0xCAF100FF,0x5A3BAC6D,0xB8BC8526,0x0400FFB7,0xFF6C5A3E,0xA76C8000,
    0x4C83F8DF,0x6F795ADA,0xFE1B9D24,0xA8C4A679,0x6B57BCED,0xFEEE1614,0xC9FD4563,0x00FF4463,
    0x9D44EBD9,0x34321FB6,0xD55E2D34,0xEE9A76DE,0x2EE07F49,0x722C5DEF,0xFBC7B2D9,0xBD311E99,
    0xFB7D4BFE,0x95EDFD5B,0x28FEE9C6,0xB4D30DD3,0xFEB1AB56,0x7F9B94F7,0x19ADB4F8,0x479052BC,
    0x6F328DE4,0xF3CFB7B1,0x00FFF9EC,0x5C2A1BE0,0xB7197B1B,0xAFC7D3A9,0x31B7C5DB,0xF9D5265E,
    0x249D2D5D,0x9272FC5F,0x924E676D,0xFB5B2319,0xBE9DE5BD,0xDBF9E478,0xB072DFFB,0x9A2CD721,
    0xD2644334,0x23F78D48,0xFD279FDA,0xDE305AF1,0x92283CC5,0x5638CAAD,0xFC708FDA,0x5436C07F,
    0xCC825872,0x4D375637,0xC8AB4B23,0x931CBD3F,0x1E4D3532,0xCDDAA7AD,0xE752FD26,0x12F76BF7,
    0xFD5F47EA,0x537DA10E,0x77B6B449,0x36E5CE92,0x9146CF7F,0x1D00FFD3,0xBFB9C86A,0x76D0F5F0,
    0x44A32E48,0x1966F55F,0xF5FD2F36,0xBB855225,0xA129E50A,0x641F1D58,0x32FDA7B1,0xC400FFD9,
    0xF3E56955,0xBBCB3C11,0xB3CFC7D7,0x00FFDFC9,0xBB5D25A0,0xCD03B7BB,0x6F245C31,0xF964C8FD,
    0xAC8AEF7F,0x8F4A5697,0xFF7DB48F,0x6EF79700,0x1DFA00FF,0x4563BF53,0x6BF699A9,0x11F78F65,
    0xF20F6FDC,0x55BAD048,0x77B97C39,0xFE9BBFA9,0x723F79B9,0xBE16E4B7,0x5E16E95E,0x67776D36,
    0xA806FD4F,0x57252C4A,0xFB86CFCF,0xFFD96B9F,0xD53B8E00,0x2BC3BEC5,0x04656DC9,0x36493351,
    0x0BC9EFCF,0xE9EC00FF,0x92E9D055,0xA934ED7C,0x00FF7CF2,0x02D04AB9,0x2DF923C5,0x3F32F23F,
    0xBD51CFFE,0x62F990C5,0xE783B3B5,0xF749F7F9,0x4B8AEF3F,0x5A11AD98,0x67383BD2,0xC4DD05D9,
    0x26CFFD49,0xAD34EB3A,0xDCA41B16,0xF2495CB0,0x79AD00FF,0x00FF1F9D,0x6F75AE43,0x1CD12DED,
    0xF8BB69AC,0xADDE8DE2,0x6E08E241,0x642F11D5,0x1DF7E9D8,0x496D4ABE,0x6EA54CAD,0xA4D59A84,
    0x3ACF163A,0x67EEAD19,0x4FD2FBDE,0x01FC6F9F,0xB3C343EB,0xBD1F044B,0xBF8D648D,0xDB2AA4E7,
    0xA8A7EF3F,0xBB8D0DED,0x23A94223,0xEF00FFFD,0x1EF77FEC,0x6C00FFAD,0x8F901F43,0xE4FE6B0C,
    0xEF3FBB6E,0xBA93A994,0x76D35CB0,0xD4DD8AB4,0xEF1EC5DB,0xAA4475FA,0x378A2012,0x9F688C58,
    0xEFB188C4,0xA472FC4F,0x3DD64E7D,0x7F33E58D,0xFC9F0CB9,0xB66A2345,0xB2EF1EAF,0x463E9BCA,
    0xCE276DD9,0x65C5F7BF,0x2247D867,0x2EB6BD21,0x13F8F6ED,0x7E7862F8,0xC700FF44,0xB7AE86EA,
    0x5B1E9B08,0x7900FFC7,0x7AF63F5D,0xE19FC6E9,0x4F4937DB,0xB1CDCFDA,0x13391E9D,0xAC1D00FF,
    0xECD0E0B9,0xD4A5D019,0x8FFD7DF0,0xF8CFBE1B,0xEE65571A,0x525114F6,0xD1B95BDE,0x63B93B16,
    0x2D7FE34F,0xF1FD67DF,0x6D1AEA50,0x9E259BCC,0xFB235DED,0xFF44B2E9,0x9D568000,0xB2DA69A2,
    0xC95ADA22,0xFD7D3B2A,0x07FE77BF,0xED87CF45,0x3DFE8FA1,0xE5BFD9E4,0x9592BEDF,0xC3D8C59E,
    0x95E3D3B3,0x8BF7EC1F,0x24B9FDBF,0xA6FBFEE3,0x12C75ADD,0x772CCBA3,0xD124EC1F,0x7BF100FF,
    0xD3B6A1EB,0x77B9C674,0x1F911995,0xF7EE3FEE,0xF4E300FF,0x253A1D5D,0x5FBC7D8B,0x477AFE7F,
    0xEAF7CFFD,0x8E15B5F9,0xE4EC0842,0xD6BD3C8D,0xBD6FFCE9,0x475AAF1E,0x35FB44B6,0x00FF9AEF,
    0x5BBEF773,0x75E800FF,0xEDE165BD,0x4325E53A,0x9D8FF669,0x47E4A637,0x427870AB,0xB099C8D0,
    0xFBE4CF92,0xA1ECF3E9,0x889105CD,0xEBBF72EB,0x00FFF926,0x7FB495E9,0xF33FFE27,0xCC0DA9D4,
    0x999545D2,0x9FCE3F10,0xEEE94A63,0xD9A7153C,0xDB3C46D8,0xDC373799,0xFE8F4D45,0x5B34FBC7,
    0x06473378,0x144B9039,0x259FC2BF,0xEC4C9443,0xE6EC7D8E,0xCD8CE593,0xD9F466B3,0x00FF8467,
    0x8B7CE9E2,0xEA7E76A9,0x00FF44F2,0x92AE1762,0x5B36C2F7,0xC7E76124,0x8F1C7FE5,0x00FF7FBF,
    0xF42D5517,0xD9443E4D,0x6524DB25,0x4DD2587E,0xB2429394,0xC25E2D33,0xD15CFE2D,0x9ECE37E0,
    0x1FFC6F4C,0xA87151EE,0x89728D69,0x1FE8AC0C,0xFE6713F8,0x931658C9,0xA17811C5,0xE38F3B8E,
    0xB3C7F0DE,0xA68B00FF,0x2AC3DFDD,0x172CDA27,0x48DC3F7B,0x4E2BF9E4,0x6F6E4D4D,0xD1966B5B,
    0x44FAFE23,0x1371DF4D,0x94E37FEE,0xAA63A1FB,0x6B00FF46,0x765492BA,0x4F77B3DF,0xE96505F8,
    0xFAC7A5BA,0xDD4F7BBB,0x1E1DF747,0x2E91A545,0x9CCD77E5,0xFBC39FA8,0xFB4F74C7,0x635693EE,
    0x74097AB9,0x5547063B,0xF20192BA,0x7F478E6F,0x4EEB71FC,0xDA0ECF3B,0x66FBEDB3,0x1ED5B1C3,
    0xFD679335,0xE9CB95F6,0x7C8F701E,0x7C3ADD70,0xDD7100FF,0xBC4AF63F,0xD1896CBF,0x3F42FB53,
    0xF24DBAEF,0xBE39FE27,0x12B9CBA6,0xDEDAE466,0xB97F249F,0x6F2F7FB4,0xB3C723CF,0xBED6ABE6,
    0xE3F2B12C,0xF911B752,0x38CEF23F,0xFFD800FF,0x9AEBC700,0xF9256EF3,0x2392D74C,0x9600FFEC,
    0x537744CF,0x7EFEFC33,0xFB3E9FCD,0x954B89CD,0xB9A07313,0xC58E96F1,0x4B2A53E1,0x7E9B4EFC,
    0x45F3FDEF,0xDBF48CB7,0x2E3B276B,0xEBDF0E64,0xFE8F5D3E,0x6BF7C9DF,0x5AAE7998,0x88B47649,
    0x2300FF88,0x282AADFD,0x72BFD2FE,0x00FFE7DB,0xFC31B7A6,0xCFE7F89F,0x3734404D,0xA365F126,
    0x49DFF249,0x7FDC9F66,0xBD53659F,0x3F9D06F1,0xCFF3E294,0xF6B1CF4D,0x81FE3FA2,0x9BDCF55C,
    0x4900FF64,0xEF5FF3B2,0x7FCBEBFE,0x4BAB02FD,0xCE459B25,0xF2DF74EB,0x578F9627,0x595CACC8,
    0x666B41D3,0xAC2EEF07,0x36F7D9E0,0xEF3FF747,0xC37E91BA,0xDF4D7B1C,0xECF17FFB,0xB200FF8F,
    0x4BFC7F56,0xBC05D119,0x9DCFFDA9,0xB3B8742A,0x993C1D81,0x48DF27B6,0x91FD7FE4,0x6DCC17EB,
    0xFF318B64,0x223A6700,0xA36BDEC6,0x8F7DF27C,0x893EFE67,0x17FBE057,0xD246E597,0x91C01F6F,
    0x1A3D57BA,0x699C3445,0xFECFBFD3,0x927FCCB7,0xC5D0C8AE,0x5C43FA1F,0x9E00FF21,0xFFA32369,
    0xA414E800,0xF6A6B189,0x49372176,0x00FF6CE7,0x00FF8EAE,0xB15905FA,0x4846B6B1,0x4384CBBC,
    0x263D00FF,0x00FFE593,0x0B3EEBBE,0xF237367F,0x131D2F6D,0x00FFFCF8,0x40AECEFE,0x56F406EB,
    0x25F62F96,0xE200FF54,0x76C81DEA,0xB5481735,0xA27DF668,0xB9CEC764,0x7FEE93B9,0xD2E474DF,
    0x097A53AD,0x1F00FFB7,0xEC9F34CF,0x51B700FF,0xD1A8FBC3,0x7FA211A5,0xF247BB0B,0x7EF5E37F,
    0xD952ED38,0x8F206E19,0xB5CF3E3F,0x9B6C432D,0xC2A3A919,0x4886C63C,0x67DF3FD3,0xD3F7BF4D,
    0x389B7BD5,0x87674762,0x7FBF5DCF,0x7FF373CB,0x8A7894BE,0xDD6368D6,0x6524CB04,0xEA90AFB7,
    0x94EF3FDB,0x9ABA36AA,0xCB5B0241,0xB9493A71,0x3F9EB83C,0xD526A99E,0xBD3B45D1,0xF344CA1E,
    0xFEF2B6A5,0x1FFC895D,0xDA4625FB,0x6C31A465,0xF3DD180F,0x7A47F6FE,0x6B3ABFD5,0x1217C52E,
    0xB4FA2FBA,0x00FF448E,0x0D5636D9,0xCF70B6DC,0x884BDBFB,0x25BBFE93,0xC2B11B69,0x11FE94C6,
    0xD0098AB4,0xF71F8D79,0xFD4F64E2,0x68A79D92,0x905D611A,0x81247943,0x3E9D6FFE,0x79DB654A,
    0x0BC92A6D,0xBBFB1041,0x67D3F2E6,0x2D650FFC,0x074D59B3,0x16F24232,0x939600FF,0xFBCFA623,
    0xDB6E93E2,0x5FA2729A,0xE3B447F8,0x58DCF27C,0x23BF144F,0x4FA3C9BE,0xF4919EFD,0xD65D2D8D,
    0x472219D2,0xD17CDBF9,0x71FCCFA6,0x166D7BEA,0xE78917CE,0xF1CF544B,0x6C72E4A5,0xEE6F00FF,
    0x968E1D51,0x212DB1CB,0x00FF4292,0xB3CF883C,0xAC4000FF,0x2109E6EF,0x685A69D2,0x974FBE28,
    0xE2057FF2,0x49C9FEA7,0x32E9A76D,0xC892AC23,0xF962BBE9,0x85FD9F77,0xB14EE732,0x58D12837,
    0xE6B789B4,0xE87FB658,0xD77A2B1B,0x8EE4D346,0x90CDFE07,0x20F78B79,0x7700FF8D,0xE9D8FEFE,
    0x2493495E,0x77DA568A,0x5E1BA787,0x47D0C85B,0x9B3CB0FE,0xEBC8F13F,0x49333D66,0x4B45B7B5,
    0xF9DFC6A9,0xB73AB2E6,0x2BB5F4FD,0xB47DBA68,0x545AA4D1,0xBF5F23E1,0x7F0A49F6,0x6B86BAE8,
    0x8EA62B2B,0x13693438,0x64E1B8FD,0xEC566E7A,0xD6AC6263,0xEF40DC31,0x17A65D13,0xDF6AD9E6,
    0x74F9ACBB,0xD981261B,0x4647DA2E,0x55459EF9,0xBF7F36F9,0x263A0C5D,0x3636B29D,0xF9216937,
    0xFD24597E,0xE6777FE3,0xDA0E4FA2,0xEEB5CFC4,0x8FEC5D78,0xFEEBE870,0x49CF00FF,0xBD9CC54A,
    0xB6E285BF,0xA43A268D,0x936F64DF,0x00FFD9E4,0xEBACEEA1,0x86E90BEF,0xA56B16E1,0xF6E67ED8,
    0xB200FFD9,0x2C6B573A,0xECC69236,0x3646D2AE,0xBF71CFA7,0xBFCFFD0D,0xA2BBD65C,0xCBF6C8DB
};

static const unsigned int8 WoodLightImgB[] = {
    17,
    0x6D,0x65,0x24,0xA9,0xBD,0x3E,0xE3,0xBE,0xFA,0xB8,0xCD,0xB7,0xA1,0x49,0x23,0xFF,
    0xD9
};

// --- Saved full qualified output path and filename, so we've no troubles
// --- when cleaning up, even if the current working folder was changed
// --- during program runtime.
// ---------------------------------------------------------------------
char WoodLightImgName[8192]; // it's a safe size for any current OS

// --- Cleanup function to delete the written file, called by the atexit()
// --- handler at program termination time, if requested by user.
// ---------------------------------------------------------------------
void KillWoodLightImgData(void)
{
    remove(WoodLightImgName);
}

// --- Function to write the array(s) back into a file, will return the
// --- full qualified output path and filename on success, otherwise an
// --- empty string is returned (access/write errors, file truncated).
// ---------------------------------------------------------------------
const char *WriteWoodLightImgData(const char *FileName, int16 AutoClean)
{
    FILE *han = NULL; // file handle
    int32 num = NULL; // written elements

    #ifdef QB64_WINDOWS
    if (!_fullpath(WoodLightImgName, FileName, 8192)) return "";
    #else
    if (!realpath(FileName, WoodLightImgName)) return "";
    #endif

    if (!(han = fopen(WoodLightImgName, "wb"))) return "";
    if (AutoClean) atexit(KillWoodLightImgData);

    num = fwrite(&WoodLightImgL0[1], 4, WoodLightImgL0[0], han);
    if (num != WoodLightImgL0[0]) {fclose(han); return "";}

    num = fwrite(&WoodLightImgB[1], 1, WoodLightImgB[0], han);
    if (num != WoodLightImgB[0]) {fclose(han); return "";}

    fclose(han);
    return WoodLightImgName;
}

