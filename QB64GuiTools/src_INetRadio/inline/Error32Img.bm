'============================================================
'=== This file was created with MakeDATA.bas by RhoSigma, ===
'=== you must $INCLUDE this at the end of your program.   ===
'============================================================

'---------------------------
'--- ReadError32ImgData$ ---
'---------------------------
' This function will read the DATAs you've created with MakeDATA.bas
' into a string, no data will be written to disk. If you rather wanna
' rebuild the original file on disk, then use the write function below.
'
' You may directly pass the returned string to _SNDOPEN, _LOADIMAGE or
' _LOADFONT when using the memory load capabilities of these commands.
'----------
' SYNTAX:
'   dataStr$ = ReadError32ImgData$
'----------
' RESULT:
'   --- dataStr$ ---
'    The data of the embedded file. This is in fact the same as if you
'    had opend the file and read its entire content into a single string.
'---------------------------------------------------------------------
FUNCTION ReadError32ImgData$
'--- option _explicit requirements ---
DIM numL&, numB&, rawdata$, stroffs&, i&, dat&
'--- read DATAs ---
RESTORE Error32Img
READ numL&, numB&
rawdata$ = SPACE$((numL& * 4) + numB&)
stroffs& = 1
FOR i& = 1 TO numL&
    READ dat&
    MID$(rawdata$, stroffs&, 4) = MKL$(dat&)
    stroffs& = stroffs& + 4
NEXT i&
IF numB& > 0 THEN
    FOR i& = 1 TO numB&
        READ dat&
        MID$(rawdata$, stroffs&, 1) = CHR$(dat&)
        stroffs& = stroffs& + 1
    NEXT i&
END IF
'--- set result ---
ReadError32ImgData$ = rawdata$
END FUNCTION

'----------------------------
'--- WriteError32ImgData$ ---
'----------------------------
' This function will write the DATAs you've created with MakeDATA.bas
' back to disk and so it rebuilds the original file.
'
' After the writeback call, only use the returned realFile$ to access the
' written file. It's your given path, but with an maybe altered filename
' (number added) in order to avoid the overwriting of an already existing
' file with the same name in the given location.
'----------
' SYNTAX:
'   realFile$ = WriteError32ImgData$ (wantFile$)
'----------
' INPUTS:
'   --- wantFile$ ---
'    The filename you would like to write the DATAs to, can contain
'    a full or relative path.
'----------
' RESULT:
'   --- realFile$ ---
'    - On success this is the path and filename finally used after all
'      applied checks, use only this returned filename to access the
'      written file.
'    - On failure this function will panic with the appropriate runtime
'      error code which you may trap and handle as needed with your own
'      ON ERROR GOTO... handler.
'---------------------------------------------------------------------
FUNCTION WriteError32ImgData$ (file$)
'--- option _explicit requirements ---
DIM po%, body$, ext$, num%, numL&, numB&, rawdata$, stroffs&, i&, dat&, ff%
'--- separate filename body & extension ---
FOR po% = LEN(file$) TO 1 STEP -1
    IF MID$(file$, po%, 1) = "." THEN
        body$ = LEFT$(file$, po% - 1)
        ext$ = MID$(file$, po%)
        EXIT FOR
    ELSEIF MID$(file$, po%, 1) = "\" OR MID$(file$, po%, 1) = "/" OR po% = 1 THEN
        body$ = file$
        ext$ = ""
        EXIT FOR
    END IF
NEXT po%
'--- avoid overwriting of existing files ---
num% = 1
WHILE _FILEEXISTS(file$)
    file$ = body$ + "(" + LTRIM$(STR$(num%)) + ")" + ext$
    num% = num% + 1
WEND
'--- write DATAs ---
RESTORE Error32Img
READ numL&, numB&
rawdata$ = SPACE$((numL& * 4) + numB&)
stroffs& = 1
FOR i& = 1 TO numL&
    READ dat&
    MID$(rawdata$, stroffs&, 4) = MKL$(dat&)
    stroffs& = stroffs& + 4
NEXT i&
IF numB& > 0 THEN
    FOR i& = 1 TO numB&
        READ dat&
        MID$(rawdata$, stroffs&, 1) = CHR$(dat&)
        stroffs& = stroffs& + 1
    NEXT i&
END IF
ff% = FREEFILE
OPEN file$ FOR OUTPUT AS ff%
PRINT #ff%, rawdata$;
CLOSE ff%
'--- set result ---
WriteError32ImgData$ = file$
EXIT FUNCTION

'--- DATAs representing the contents of file Error32px.png
'---------------------------------------------------------------------
Error32Img:
DATA 400,9
DATA &H474E5089,&H0A1A0A0D,&H0D000000,&H52444849,&H20000000,&H20000000,&H00000608,&H7A7A7300
DATA &H000000F4,&H59487009,&H0B000073,&H0B000013,&H9A000113,&H0000189C,&H4449FB05,&HC3585441
DATA &H6C6B97D5,&HC7185593,&HF6FBEFFF,&H656CBDB6,&H75DA5A37,&HB1B2B6ED,&H5DB4ACAE,&HB021408B
DATA &H0410194D,&H454CA221,&H0A025451,&H7E3124DF,&H3141A891,&H04D12F01,&H25C8C4D4,&HA2263460
DATA &H1843644C,&H14361041,&H2AEEB6E4,&HAC6EB630,&HACB6BB7D,&H01F8EDEF,&H36C29837,&H3E78C0E6
DATA &H3CE797BD,&HCFFCEFCF,&H0E79CE79,&HB16E7FF0,&H12272C58,&HEFBA4C89,&H4C210981,&H7D6D5D5D
DATA &HA9036363,&HDE48BFAF,&HABEDE77D,&H8C242082,&H923D17C4,&HD96FEF4E,&HD9658FBC,&H3F7EDD09
DATA &H2EE04268,&H553FD62E,&H9187ECB1,&HB6EE62F8,&H9762D4C3,&HC5E2C973,&HF67CF71B,&H7DBBD529
DATA &HB076D087,&HBE3FB64A,&H4285098C,&H2BF6AEE6,&HBB3BDAFB,&H0033DCAE,&HBD4741B3,&H556BEAF2
DATA &H1C9E4EA7,&H84F27F97,&H5CC978B4,&HC8D99E45,&H8BFCF91C,&H9C1E93EB,&HF70F6CA3,&HB6777794
DATA &HA27AE16F,&H9C0A66F7,&H5A85772E,&H3B482EAD,&HB79A5C71,&HF4619CA0,&HB23260D9,&H4FCC2BE0
DATA &H403AACE8,&H267CF9A6,&HE5799653,&H6603593D,&HBE5E8E83,&HDFA6C562,&H2D807F2A,&H1EA4AC7D
DATA &H79E1026F,&H3EA24000,&H236B7413,&HE15AB6EF,&H9B37B974,&HD4663A0D,&H5C2C1601,&H183046F4
DATA &H5FF46F1A,&HAF5EDD10,&HD905044A,&H3464816C,&HC4484A81,&H7D439714,&H52CDBDEE,&H6B195949
DATA &H3FBC722F,&H59B900AA,&HF339C4C6,&HAE69AFE6,&H20A784AC,&H34DAD097,&HD22C89C8,&HFA472A1E
DATA &H1A50F9BC,&HB512604D,&H592AB0B0,&H52618B1F,&HD5956391,&H2A32999C,&H8E836600,&HAAE2F95A
DATA &HFAFAFE1D,&H7F4BCCE4,&H85053948,&H1F60004A,&H436FD698,&H0220ECD9,&HA2C5AB0F,&HAB6DB0BC
DATA &H2E773E54,&HBF78F6ED,&HD4741B32,&H494806BF,&H9C2DCD4D,&H5A2F3454,&H9ACF2D5D,&HA4E9A4EA
DATA &H47811014,&HDFBBBBBC,&H0DDDDE26,&H94A00822,&HD1303C1A,&H0E6BC742,&HCF72E9C3,&HBAD64E4E
DATA &HD98015FE,&HACD6A3A0,&HD7F3B75D,&H9955C7E3,&H9194A0E1,&H8111479D,&H02010407,&HF5DBF5C7
DATA &H405E133D,&H54B198CA,&HA16AA1D7,&HB84CE674,&H433DDE3D,&H802830A9,&H34AF2F35,&H9DCD3535
DATA &H5498FC70,&HA12AF3EA,&H30820250,&H33DF6820,&H811005E1,&HCC649107,&HAD9559B0,&H4F227E9F
DATA &H8C72F9F7,&H118AA699,&H3A0D9801,&HAB5585FA,&H5556D5B7,&H882AD9D1,&H1FD4DEAC,&H483C089C
DATA &H72100828,&HBC143DE3,&HFFAFEDF1,&HBA82890A,&H18704DB3,&HDDBA708D,&H3A0D9B1F,&H6601AEFA
DATA &H13AC9495,&H3FA2C104,&H79F2467B,&HB820D58A,&HC1E79C19,&HEA403734,&H680005ED,&HDB10FC9A
DATA &H730E42AF,&HD437C390,&HEAF51970,&H207E1F0B,&H25969496,&H4DF6ECD9,&HB8A38A77,&H4B95E8C3
DATA &HB5EC7D1E,&H46ECF79F,&H524D3EA9,&HBE99D36A,&H063472E0,&H588FD1BE,&H577A334B,&H2B360F3C
DATA &H7FDF3D0B,&HBC14290B,&H0D341599,&H9C831D9A,&H0311032C,&H9C391401,&H3F9E2F6B,&HA5D37AFF
DATA &H14B0F0B6,&H33F97278,&H7CBA5D1F,&HD4D4D539,&H8A8A3A28,&H4869A054,&H0F44613D,&HBDDB8356
DATA &H4763B103,&HED5FB721,&HCC3904CF,&H65AE3C0D,&H184F5219,&H654ECE86,&HE25DEECB,&H8572F29C
DATA &H3DDDE3DB,&H989829AC,&H75369D9B,&H0227F4FA,&H2993F7FB,&H628A5685,&H3F9F88B5,&H76D76E0B
DATA &H4117FDC4,&HA3BFB144,&H229071C0,&HBE591011,&HE062BCAD,&H58E33C1A,&H7BEFBA26,&H39EE5D38
DATA &HDB56F985,&H9A0AEADF,&HADDA7BFE,&H97ED797E,&H4E9F4E67,&H45DA0630,&H44CCC993,&H9116FBBE
DATA &H0BFD03EA,&H7026D6EC,&H1B8E441C,&H0DD5CF34,&HD7F4542D,&HAF6CF8DA,&H4CF62A97,&HB4D6FAF9
DATA &H1E4A28A4,&H18306000,&H658B661D,&H2C39A906,&H2BB62ACF,&HC0473563,&HB9DF36B7,&H21050A32
DATA &H90070785,&H93783123,&H4F96EA95,&H7CD34AB6,&H06F1FCBE,&H2ADB92C3,&HB3A6D7F0,&H8D4D64EB
DATA &H447AF322,&H83363754,&HD4196D6F,&H0DEDFC79,&HD174BAB8,&H74BDFB90,&H58DA01BE,&HD58FB048
DATA &H6CF6E5C2,&H806153EB,&HF1772E02,&H3D5A9552,&H56AEB531,&HAAB5E9F2,&H5061BFB8,&HA0CD02A7
DATA &HAE014277,&H6681E6E7,&H486BC1D9,&H8A4D8251,&HB75BFC6B,&H6565258A,&H6C0BF363,&H84580FAF
DATA &H7A8E8366,&HB6E7D9FA,&H44ACAA9C,&HE4128A96,&H8E43F573,&HC126CE2A,&HD85ECDFE,&H8D0BD9BF
DATA &H3DA439C3,&H5B0AD0DF,&H4DB4025A,&H764C704D,&H1931CFAE,&H1E01FB12,&H06C8F45E,&H1BD51A31
DATA &H9E8A2FEB,&HEE469564,&H8C7187E5,&H402EBB92,&H8A023A33,&HC50F476B,&H2A6CD866,&H3B78BBA7
DATA &H21082800,&HED5D5D74,&HEE769FFA,&H51030644,&H0C54EF6C,&H091B19C7,&H94E679A3,&H7DDC731B
DATA &H6200586D,&HE86435E7,&H6B789AF5,&H3233D22B,&H98B04E16,&H1D0229C6,&H52520B1D,&HDCC69452
DATA &H397F445C,&H136C6A2A,&H40470B10,&HC5E86944,&H7375DDD5,&H872953F7,&H99804CBA,&H90444568
DATA &H279371F9,&H8E39126B,&HBEE4E4B6,&H8B2000AC,&H796F08A2,&HF3F2DA39,&HBD6FFDD8,&H7AA953C9
DATA &HC1E1408C,&HC1C8051B,&H515BC938,&H448869A1,&H00124920,&HB0005024,&H5D35A5EE,&H693939D9
DATA &HC0929263,&H4D3404C8,&HBA351401,&H92408400,&H75747465,&H20081021,&H07BD71CC,&H50B47EAB
DATA &HEA316000,&H8E45ED0B,&H36AD5A8D,&HFF23F46F,&H68D10483,&HA7EFD2F4,&H082F5B7F,&H97D51D42
DATA &H00520086,&HEBA7DF24,&H4F401065,&HFC875B6B,&HFFB0DF9F,&H8EC9C104,&H2D64DFAD,&H00000038
DATA &H00,&H49,&H45,&H4E,&H44,&HAE,&H42,&H60,&H82
END FUNCTION

